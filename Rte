#include<iostream>
#include <math.h>
#include <stdlib.h>
#include <fstream>
using namespace std;
struct List
{
    double** a;
    int n, m;
    double* b;
    int k;
    double* AV;
    int* ANL;
    int* ANR;
};
void izfile(ifstream& e, List& A)
{
    e >> A.n;
    e >> A.m;
    e >> A.k;
    cout << A.n << " " << A.m << endl;
    A.a = new double* [A.n];
    for (int i = 0; i < A.m; i++)
    {
        A.a[i] = new double[A.m];
    }
    for (int i = 0; i < A.n; i++)
    {
        for (int j = 0; j < A.m; j++)
        {
            A.a[i][j] = 0;
        }
    }
    int str; int stl; double zn;
    for (int i = 0; i < A.k; i++)
    {
        e >> str;
        e >> stl;
        e >> zn;
        A.a[str - 1][stl - 1] = zn;

    }
    for (int i = 0; i < A.n; i++)
    {
        cout << endl;
        for (int j = 0; j < A.m; j++)
        {
            cout << A.a[i][j] << " ";
        }
    }
}

void cscf(List& A, ifstream& e)
{
    A.b = new double[A.n]();
    A.AV = new double[A.k];
    A.ANR = new int[A.k];
    A.ANL = new int[A.n];
    int c1, c2, c3; int l = 0; int sch = 0;
    e >> c1; e >> c2; e >> c3;
    for (int i = 0; i < A.k; i++)
    {
        e >> c3;
        e >> A.ANR[i];
        e >> A.AV[i];
        if (c3 != l)
        {
            sch++;
            l = c3;
            A.ANL[l - 1] = sch - 1;
        }
        else
            sch++;
    }
    int kolvo = 0; int index;
    for (int i = 0; i < A.n - 1; i++)
    {
        kolvo = A.ANL[i + 1] - A.ANL[i];
        index = A.ANL[i];
        for (int h = index; h < A.ANL[i + 1]; h++)
        {
            A.b[i] = A.b[i] + A.AV[h];
        }

    }
    for (int i = 32; i < 36; i++)
    {
        A.b[A.n - 1] = A.b[A.n - 1] + A.AV[i];
    }
    cout << endl;
    cout << "AV" << endl;
    for (int i = 0; i < A.k; i++)
    {
        cout << A.AV[i] << " ";
    }
    cout << endl;
    cout << "ANR" << endl;
    for (int i = 0; i < A.k; i++)
    {
        cout << A.ANR[i] - 1 << " ";
    }
    cout << endl;
    cout << "ANL" << endl;
    for (int i = 0; i < A.n; i++)
    {
        cout << A.ANL[i] << " ";
    }
    cout << endl;
    cout << "b" << endl;
    for (int i = 0; i < A.n; i++)
    {
        cout << A.b[i] << " ";
    }
}
void YAKOBI(List A, ifstream& e)
{
    double* A1 = new double[A.n];
    double* ATR = new double[A.n];
    double* r = new double[A.n];
    double* XK = new double[A.n];
    double* XK1 = new double[A.n]();
    double eps = 0.001; int sch = 0; int k = 0;
    double sum = 0; double chd; double diag; int nd;
    while (sch != 10)
    {
        sch = 0;
        if (k == 0)
        {

            for (int r = 0; r < A.n; r++)
            {
                XK1[r] = A.b[r];
                XK[r] = XK1[r];
                k++;
            }
        }
        for (int i = 0; i < A.n-1; i++)
        {
            for (int j = A.ANL[i]; j<A.ANL[i+1]; j++)
            {
                sum = sum + A.AV[A.ANR[j]] * XK1[A.ANR[j]]; //A*X(K)
            }
            A1[i] = sum;
            sum = 0;
        }
        for (int i = A.ANL[A.n - 1]; i < A.ANL[A.n - 1] + 4; i++)
        {
            sum = sum + A.AV[A.ANR[i]] * XK1[A.ANR[i]];
        }
        A1[A.n - 1] = sum;
        sum = 0;
        for (int i = 0; i < A.n; i++)
        {
            r[i] = A1[i] - A.b[i];
        }
        for (int i = 0; i < A.n - 1; i++)
        {
            for (int j = A.ANL[i]; j < A.ANL[i + 1]; j++)
            {
                sum = sum + A.AV[A.ANR[j]] * r[A.ANR[j]];//r*ATR
            }
            ATR[i] = sum;
            sum = 0;
        }
        for (int i = A.ANL[A.n - 1]; i < A.ANL[A.n - 1] + 4; i++)
        {
            sum = sum + A.AV[A.ANR[i]] * r[A.ANR[i]]; // r*ATR
        }
        ATR[A.n - 1] = sum;
        sum = 0;
    }
    for (int i = 0; i < A.n; i++)
    {
        //cout << XK[i] << endl;
    }
    cout << endl;
    //cout << k << " iter" << endl;
}
int main()
{
    List a;
    ifstream f, f1, f2;
    f1.open("C:\\Users\\stud\\Desktop\\matr.txt");
    f.open("C:\\Users\\stud\\Desktop\\matr.txt");
    f2.open("C:\\Users\\stud\\Desktop\\matr.txt");
    izfile(f, a);
    cscf(a, f1);
    cout << endl;
    cout << "YAKOBI" << endl;
    YAKOBI(a, f2);
    cout << " " << endl;
    return 0;
}
